<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WindowCustomizeTest">

    <!-- 窗口大小调节的控件（就是右下角那个）的前景色 -->
    <LinearGradientBrush x:Key="ResizeGripperForeground" EndPoint="1,0.75" StartPoint="0,0.25">
        <GradientStop Color="#FFFFFF" Offset="0.3"/>
        <GradientStop Color="#BBC5D7" Offset="0.75"/>
        <GradientStop Color="#6D83A9" Offset="1"/>
    </LinearGradientBrush>

    <!-- 右下角调节窗口大小的小控件，是 Thumb 的一种实现形式 -->
    <Style TargetType="ResizeGrip">
        <Setter Property="MinWidth" Value="11"/>
        <Setter Property="MinHeight" Value="11"/>
        <Setter Property="Width" Value="11"/>
        <Setter Property="Height" Value="11"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ResizeGrip">
                    <Border Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <Path Width="11" Height="11" Data="M 9,0 L 11,0 L 11,11 L 0,11 L 0,9 L 3,9 L 3,6 L 6,6 L 6,3 L 9,3 z" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                            <Path.Fill>
                                <DrawingBrush TileMode="Tile" Viewbox="0,0,3,3" Viewport="0,0,3,3" ViewportUnits="Absolute" ViewboxUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing Brush="{StaticResource ResizeGripperForeground}">
                                                <GeometryDrawing.Geometry>
                                                    <RectangleGeometry Rect="0,0,2,2"/>
                                                </GeometryDrawing.Geometry>
                                            </GeometryDrawing>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Path.Fill>
                        </Path>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 窗口样式 -->
    <Style x:Key="WindowStyle" TargetType="{x:Type local:Window}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrush}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Window}">
                    <!-- 通过 Border 的 Padding，处理窗口最大化时的问题 -->
                    <Border x:Name="PART_Root" 
                            SnapsToDevicePixels="True" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <!-- 标题栏（非窗口区域） -->
                            <Grid x:Name="PART_NonClientArea" 
                                  Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <!-- 图标和标题 -->
                                <Grid Grid.Column="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="4"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="PART_IconButton"
                                            Height="28" Width="28"
                                            Content="{TemplateBinding Icon}" 
                                            Style="{StaticResource IconButtonStyle}"/>
                                    <TextBlock x:Name="PART_Title" 
                                               Grid.Column="2" 
                                               Text="{TemplateBinding Title}" 
                                               Background="Transparent" 
                                               VerticalAlignment="Center" 
                                               Foreground="#404040"/>
                                </Grid>
                                <!-- 按钮区域 -->
                                <StackPanel Name="ButtonPanel" 
                                            WindowChrome.IsHitTestVisibleInChrome="True" 
                                            UseLayoutRounding="True" 
                                            VerticalAlignment="Top" 
                                            Grid.Column="1" 
                                            HorizontalAlignment="Right" 
                                            Orientation="Horizontal">
                                    <Button x:Name="PART_MiniButton" Width="46" Height="28" BorderThickness="0" Padding="0" Content="最小化" ToolTip="最小化" IsTabStop="False"/>
                                    <Button x:Name="PART_MaxiButton" Width="46" Height="28" BorderThickness="0" Padding="0" Content="最大化" ToolTip="最大化" IsTabStop="False"/>
                                    <Button x:Name="PART_RestoreButton" Width="46" Height="28" BorderThickness="0" Padding="0" Content="还原" ToolTip="还原" IsTabStop="False"/>
                                    <Button x:Name="PART_CloseButton" Width="46" Height="28" BorderThickness="0" Padding="0" Content="关闭" ToolTip="关闭" IsTabStop="False"/>
                                </StackPanel>
                            </Grid>
                            <!-- window Content -->
                            <!-- AdornerDecorator 是实现装饰效果所必须的（如阴影） -->
                            <AdornerDecorator Grid.Row="1">
                                <ContentPresenter ClipToBounds="True"/>
                            </AdornerDecorator>
                            <!-- 窗口调整大小的小三角 -->
                            <ResizeGrip x:Name="ResizeGrip" 
                                        Width="10" Height="10" 
                                        HorizontalAlignment="Right" VerticalAlignment="Bottom" 
                                        Grid.Row="1" 
                                        IsTabStop="False" 
                                        Visibility="Collapsed" 
                                        WindowChrome.ResizeGripDirection="BottomRight" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- 窗口非活动状态 -->
                        <Trigger Property="IsActive" Value="False">
                            <Setter Property="Opacity" Value=".8" TargetName="ButtonPanel"/>
                            <Setter Property="BorderBrush" Value="#1F000000"/>
                        </Trigger>
                        <!-- 根据窗口状态，调整 Border（main）的 padding。因为在最大化的时候，窗口会向外扩展 7，我们通过main的padding（根据实际样式情况而定）抵消掉这7像素的影响 -->
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Padding" Value="7" TargetName="PART_Root"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_MaxiButton"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_RestoreButton"/>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter Property="Padding" Value="0" TargetName="PART_Root"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_MaxiButton"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_RestoreButton"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_MiniButton"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_MaxiButton"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_RestoreButton"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanMinimize">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_MaxiButton"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_RestoreButton"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>