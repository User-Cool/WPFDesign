<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CustomButtonTest"
                    xmlns:assist="clr-namespace:CustomButtonTest.Assist">


    <SolidColorBrush x:Key="Button.Static.Background" Color="#FF007AFF"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FFEDEDED"/>
    <SolidColorBrush x:Key="Button.Static.Foreground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF178EFE"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FFEDEDED"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF007AFF"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FFEDEDED"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFCCCCCC"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFEDEDED"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF999999"/>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="assist:CornerRadiusAssist.CornerRadius" Value="0"/>
        <Setter Property="assist:ShadowEffectAssist.Color" Value="#000000"/>
        <Setter Property="assist:ShadowEffectAssist.Depth" Value="1.0"/>
        <Setter Property="assist:ShadowEffectAssist.Blur" Value="3.0"/>
        <Setter Property="assist:ShadowEffectAssist.Opacity" Value="1"/>
        <Setter Property="assist:ShadowEffectAssist.IsEnabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <AdornerDecorator>
                            <Border x:Name="shadow" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" 
                                    CornerRadius="{Binding Path=(assist:CornerRadiusAssist.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                <Border.Effect>
                                    <DropShadowEffect 
                                        Color="{Binding Path=(assist:ShadowEffectAssist.Color), RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                        Opacity="{Binding Path=(assist:ShadowEffectAssist.Opacity), RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                        ShadowDepth="{Binding Path=(assist:ShadowEffectAssist.Depth), RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                        BlurRadius="{Binding Path=(assist:ShadowEffectAssist.Blur), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        Direction="{Binding Path=(assist:ShadowEffectAssist.Direction), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                </Border.Effect>
                            </Border>
                        </AdornerDecorator>
                        
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true"
                                CornerRadius="{Binding Path=(assist:CornerRadiusAssist.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}}">

                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            <Setter Property="Background" TargetName="shadow" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="assist:ShadowEffectAssist.IsEnabled" Value="false">
                            <Setter TargetName="shadow" Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>